;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname 32.rkt) (read-case-sensitive #t) (teachpacks ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp")))))
;Design a function that takes a list of Points 
;and returns the sum of all distances of that Points from (0,0).
;You should write a helper function to calculate the distance.
;For simplicity, you can use the Manhattan distance measure (distance = x + y)

;;DATA DEFINITIONS
;;Mhtan_dist ListOfPoints -> Number
;;GIVEN   : A List of Points
;;RETURNS : Sum of Manhattan distances of all the points in the list.

(define ListOfPoints (list (make-posn 2 3) (make-posn 5 10) (make-posn 50 0)))

(define (dist-helper pt)
  (+ (posn-x pt) (posn-y pt)))

(define (Mhtan_dist lst)
  (cond
    [(empty? lst) 0]
    [(cons? lst) (+ (dist-helper (first lst)) (Mhtan_dist (rest lst)))]))

(Mhtan_dist ListOfPoints)

(Mhtan_dist (list (make-posn 0 3) (make-posn -5 10) (make-posn 50 0)))